// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmacy.Infrastructure.Contexts;

#nullable disable

namespace Pharmacy.Infrastructure.Migrations
{
    [DbContext(typeof(PharmacyDbContext))]
    partial class PharmacyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pharmacy.Domain.Entities.Medication", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Medication", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Domain.Entities.Pharmacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pharmacy", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Diem Khang",
                            CreatedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5454),
                            IsDeleted = false,
                            ModifiedBy = "Diem Khang",
                            ModifiedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5454),
                            Name = "ECO"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Diem Khang",
                            CreatedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5467),
                            IsDeleted = false,
                            ModifiedBy = "Diem Khang",
                            ModifiedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5467),
                            Name = "An Khang"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Diem Khang",
                            CreatedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5469),
                            IsDeleted = false,
                            ModifiedBy = "Diem Khang",
                            ModifiedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5469),
                            Name = "Pharmacity"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Diem Khang",
                            CreatedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5470),
                            IsDeleted = false,
                            ModifiedBy = "Diem Khang",
                            ModifiedUtc = new DateTime(2024, 1, 3, 14, 2, 57, 740, DateTimeKind.Local).AddTicks(5470),
                            Name = "Long Chau"
                        });
                });

            modelBuilder.Entity("Pharmacy.Domain.Entities.Pharmacy", b =>
                {
                    b.OwnsOne("Pharmacy.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("PharmacyId")
                                .HasColumnType("int");

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Address1");

                            b1.Property<string>("Address2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Address2");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostCode");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("State");

                            b1.Property<string>("Suburb")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Suburb");

                            b1.HasKey("PharmacyId");

                            b1.ToTable("Pharmacy");

                            b1.WithOwner()
                                .HasForeignKey("PharmacyId");

                            b1.HasData(
                                new
                                {
                                    PharmacyId = 1,
                                    Address1 = "148 Hoang Hoa Tham, Ward.12, Tan Binh Dist., HCMC",
                                    Address2 = "6 Nguyen van Cu, Ward.7, Tan Binh Dist., HCMC",
                                    PostCode = "19010",
                                    State = "HCMC",
                                    Suburb = "12 Dong Khoi, Ben Tre"
                                },
                                new
                                {
                                    PharmacyId = 2,
                                    Address1 = "142 Vuon Chuoi, Ward.5, Dist.3, HCMC",
                                    Address2 = "6 Nguyen van Cu, Ward.7, Tan Binh Dist., HCMC",
                                    PostCode = "19320",
                                    State = "HCMC",
                                    Suburb = "12 Dong Khoi, Ben Tre"
                                },
                                new
                                {
                                    PharmacyId = 3,
                                    Address1 = "148 Hoang Hoa Tham, Ward.12, Dist.3, HCMC",
                                    Address2 = "67 Vuon Chuoi, Ward.5, Dist.3, HCMC",
                                    PostCode = "19300",
                                    State = "HCMC",
                                    Suburb = "12 Dong Khoi, Ben Tre"
                                },
                                new
                                {
                                    PharmacyId = 4,
                                    Address1 = "457 Nguyen Dinh Chieu, Ward.5, Dist.3, HCMC",
                                    Address2 = "6 Nguyen van Cu, Ward.7, Tan Binh Dist., HCMC",
                                    PostCode = "19040",
                                    State = "HCMC",
                                    Suburb = "12 Dong Khoi, Ben Tre"
                                });
                        });

                    b.OwnsOne("Pharmacy.Domain.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<int>("PharmacyId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.Property<string>("NumberPhone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NumberPhone");

                            b1.HasKey("PharmacyId");

                            b1.ToTable("Pharmacy");

                            b1.WithOwner()
                                .HasForeignKey("PharmacyId");

                            b1.HasData(
                                new
                                {
                                    PharmacyId = 1,
                                    Email = "eco2020@gmail.com",
                                    NumberPhone = "0979797979"
                                },
                                new
                                {
                                    PharmacyId = 2,
                                    Email = "ankhang@gmail.com",
                                    NumberPhone = "0989565656"
                                },
                                new
                                {
                                    PharmacyId = 3,
                                    Email = "pharmacity@gmail.com",
                                    NumberPhone = "0354545454"
                                },
                                new
                                {
                                    PharmacyId = 4,
                                    Email = "longchau@gmail.com",
                                    NumberPhone = "0875757575"
                                });
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
